=begin
#Practice -> Cloud API

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.0.0
Contact: Bifrost@HenryScheinOne.com
Generated by: https://openapi-generator.tech
Generator version: 7.8.0

=end

require 'spec_helper'
require 'json'

# Unit tests for SlipstreamClient::BookingApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'BookingApi' do
  before do
    # run before each test
    @api_instance = SlipstreamClient::BookingApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of BookingApi' do
    it 'should create an instance of BookingApi' do
      expect(@api_instance).to be_instance_of(SlipstreamClient::BookingApi)
    end
  end

  # unit tests for delete_online_booking_site
  # Delete online booking information for the site
  #  **Warning**: This operation will delete all online booking details for the site (booking rules, availability data etc).  Online booking should be made inactive before this operation is performed. 
  # @param site_slug The Slipstream [slug](https://sqids.org/) that uniquely identifies a physical practice
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_online_booking_site test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_online_booking_site_details
  # Get online booking site details
  # Retrieves online booking details for particular site 
  # @param site_slug The Slipstream [slug](https://sqids.org/) that uniquely identifies a physical practice
  # @param [Hash] opts the optional parameters
  # @return [OnlineBookingSiteDetails]
  describe 'get_online_booking_site_details test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_online_booking_site_payments_fee
  # Get online booking site details
  # Retrieve online booking payments fee details for a particular site 
  # @param site_slug The Slipstream [slug](https://sqids.org/) that uniquely identifies a physical practice
  # @param [Hash] opts the optional parameters
  # @return [OnlineBookingSitePaymentsFee]
  describe 'get_online_booking_site_payments_fee test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_online_booking_sites
  # List Online Booking site details
  # Lists Online Booking site in the slipstream Online Booking service
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page_size The page number to retrieve
  # @option opts [String] :next_page_token A token retrieved from a previous request, used to retrieve the next page of results
  # @option opts [String] :client_identifier The client identifier to search
  # @option opts [String] :client_unique_id The client unique id to search
  # @option opts [String] :client_subscription_id The subscription id to search
  # @option opts [String] :name The client identifier to search
  # @option opts [Boolean] :is_active Filter active or inactive sites.
  # @option opts [PracticeManagementSoftware] :x_practice_management_software The intended practice management software for the request, used to disambiguate a pms specific identifier when you have access to multiple PMS systems.   **Omit this if you only have access to a single PMS.** 
  # @return [ListOnlineBookingSitesResponse]
  describe 'list_online_booking_sites test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for online_booking_site_populate_scheduler
  # Re-populate online booking details for a site (Jarvis)
  # Re-populate online booking details in Jarvis. 
  # @param site_slug The Slipstream [slug](https://sqids.org/) that uniquely identifies a physical practice
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'online_booking_site_populate_scheduler test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for patch_online_booking_site_details
  # Update existing online booking site details
  # Update online booking details for a site.  
  # @param site_slug The Slipstream [slug](https://sqids.org/) that uniquely identifies a physical practice
  # @param update_online_booking_site_details_request 
  # @param [Hash] opts the optional parameters
  # @return [OnlineBookingSiteDetails]
  describe 'patch_online_booking_site_details test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_online_booking_site_payments_fee
  # Update online booking payments fee for a site
  # Update online booking payments fee for a site.  
  # @param site_slug The Slipstream [slug](https://sqids.org/) that uniquely identifies a physical practice
  # @param online_booking_site_payments_fee 
  # @param [Hash] opts the optional parameters
  # @return [OnlineBookingSitePaymentsFee]
  describe 'update_online_booking_site_payments_fee test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for upload_availability
  # Upload availability
  # Uploads availability slots for practitioners at a practice site. This operation will replace all existing availability for the specified practitioner/reason/scenario combinations.  Accepts both ExactIdentifiers (GUID format) and ExternalIds for practitioner and reason identifiers.  Time slots should be provided in HH:MM format (24-hour). 
  # @param site_slug The Slipstream [slug](https://sqids.org/) that uniquely identifies a physical practice
  # @param upload_availability_request 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'upload_availability test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for upload_booking_rules
  # Upload booking rules
  # Uploads booking rules for a practice site. This will replace ALL existing booking rules for the site.  **Warning**: This operation will deactivate all existing rules including those generated from PMS sync.  Accepts both ExactIdentifiers (GUID format) and ExternalIds for practitioner and reason identifiers. 
  # @param site_slug The Slipstream [slug](https://sqids.org/) that uniquely identifies a physical practice
  # @param upload_booking_rules_request 
  # @param [Hash] opts the optional parameters
  # @return [BookingRulesUploadResponse]
  describe 'upload_booking_rules test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for upload_practitioners
  # Upload practitioners
  # Uploads practitioner information for a practice site. This operation will update existing practitioners and create new ones based on the external_id provided.  Each practitioner is identified by their external_id from the PMS system. 
  # @param site_slug The Slipstream [slug](https://sqids.org/) that uniquely identifies a physical practice
  # @param upload_practitioners_request 
  # @param [Hash] opts the optional parameters
  # @return [PractitionersUploadResponse]
  describe 'upload_practitioners test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for upsert_online_booking_site_details
  # Update online booking site details, create site if not exists
  # Update online booking details for a site. If the site does not exist, it will be created. 
  # @param site_slug The Slipstream [slug](https://sqids.org/) that uniquely identifies a physical practice
  # @param update_online_booking_site_details_request 
  # @param [Hash] opts the optional parameters
  # @return [OnlineBookingSiteDetails]
  describe 'upsert_online_booking_site_details test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
