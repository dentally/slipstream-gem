=begin
#Practice -> Cloud API

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.0.0
Contact: Bifrost@HenryScheinOne.co.nz
Generated by: https://openapi-generator.tech
Generator version: 7.8.0

=end

require 'spec_helper'
require 'json'

# Unit tests for SlipstreamClient::OrganisationsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'OrganisationsApi' do
  before do
    # run before each test
    @api_instance = SlipstreamClient::OrganisationsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of OrganisationsApi' do
    it 'should create an instance of OrganisationsApi' do
      expect(@api_instance).to be_instance_of(SlipstreamClient::OrganisationsApi)
    end
  end

  # unit tests for delete_organisation
  # Delete an organisation
  # Deletes an organisation from the slipstream practice registry. Will fail if the organisation owns any practice sites - delete the sites first
  # @param organisation_identifier The PMS-specific id that uniquely identifies an organisation (What you call the organisation in your software), which owns one or more practice sites
  # @param [Hash] opts the optional parameters
  # @option opts [PracticeManagementSoftware] :x_practice_management_software The intended practice management software for the request, used to disambiguate a pms specific identifier when you have access to multiple PMS systems.   **Omit this if you only have access to a single PMS.** 
  # @return [String]
  describe 'delete_organisation test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_billing_item
  # Get a specific billing item&#39;s details
  # Gets a specific billing item&#39;s details
  # @param organisation_slug The organisation slug to retrieve billing records for
  # @param item_id The unique identifier of the billing item
  # @param [Hash] opts the optional parameters
  # @return [BillingItemDetails]
  describe 'get_billing_item test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_billing_summary
  # Get a summary of billing for an organisation
  # Gets a summary of billing for an organisation
  # @param organisation_slug The organisation slug to retrieve the billing summary for
  # @param [Hash] opts the optional parameters
  # @option opts [Time] :date_from The start of the date range of the billing summary (inclusive)
  # @option opts [Time] :date_to The end of the date range of the billing summary (inclusive)
  # @return [BillingSummaryDetails]
  describe 'get_billing_summary test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_organisation
  # Get an organisation
  # Fetches the details of a given organisation in slipstream
  # @param organisation_identifier The PMS-specific id that uniquely identifies an organisation (What you call the organisation in your software), which owns one or more practice sites
  # @param [Hash] opts the optional parameters
  # @option opts [PracticeManagementSoftware] :x_practice_management_software The intended practice management software for the request, used to disambiguate a pms specific identifier when you have access to multiple PMS systems.   **Omit this if you only have access to a single PMS.** 
  # @return [OrganisationDetails]
  describe 'get_organisation test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_organisation_identity
  # Get organisation identity
  # Fetches the identity of a given organisation in slipstream
  # @param organisation_identifier The PMS-specific id that uniquely identifies an organisation (What you call the organisation in your software), which owns one or more practice sites
  # @param [Hash] opts the optional parameters
  # @option opts [PracticeManagementSoftware] :x_practice_management_software The intended practice management software for the request, used to disambiguate a pms specific identifier when you have access to multiple PMS systems.   **Omit this if you only have access to a single PMS.** 
  # @return [OrganisationIdentity]
  describe 'get_organisation_identity test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_billing_items
  # Get a list of billing item&#39;s for an organisation
  # Gets a list of billing item details for the organisation
  # @param organisation_slug The organisation slug to retrieve billing records for
  # @param [Hash] opts the optional parameters
  # @option opts [Time] :date_from The date to retrieve letters from
  # @option opts [Time] :date_to The date to retrieve letters to
  # @option opts [Integer] :page_size The page number to retrieve
  # @option opts [String] :next_page_token A token retrieved from a previous request, used to retrieve the next page of results
  # @return [BillingItemDetailsListResponse]
  describe 'list_billing_items test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for onboard_organisation
  # Upsert organisation
  # Creates or updates an organisation in the slipstream practice registry and returns a unique identifier
  # @param organisation_identifier The PMS-specific id that uniquely identifies an organisation (What you call the organisation in your software), which owns one or more practice sites
  # @param organisation_onboarding_request The details of the organisation to onboard
  # @param [Hash] opts the optional parameters
  # @option opts [PracticeManagementSoftware] :x_practice_management_software The intended practice management software for the request, used to disambiguate a pms specific identifier when you have access to multiple PMS systems.   **Omit this if you only have access to a single PMS.** 
  # @return [OrganisationIdentity]
  describe 'onboard_organisation test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
