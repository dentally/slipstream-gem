=begin
#Practice -> Cloud API

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.0.0
Contact: Bifrost@HenryScheinOne.com
Generated by: https://openapi-generator.tech
Generator version: 7.15.0

=end

require 'spec_helper'
require 'json'

# Unit tests for SlipstreamClient::OrganisationsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'OrganisationsApi' do
  before do
    # run before each test
    @api_instance = SlipstreamClient::OrganisationsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of OrganisationsApi' do
    it 'should create an instance of OrganisationsApi' do
      expect(@api_instance).to be_instance_of(SlipstreamClient::OrganisationsApi)
    end
  end

  # unit tests for delete_organisation
  # Delete an organisation
  # Deletes an organisation from the slipstream practice registry. Will fail if the organisation owns any practice sites - delete the sites first
  # @param organisation_identifier The PMS-specific id that uniquely identifies an organisation (What you call the organisation in your software), which owns one or more practice sites
  # @param [Hash] opts the optional parameters
  # @option opts [PracticeManagementSoftware] :x_practice_management_software The intended practice management software for the request, used to disambiguate a pms specific identifier when you have access to multiple PMS systems.   **Omit this if you only have access to a single PMS.** 
  # @return [String]
  describe 'delete_organisation test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_organisation
  # Get an organisation
  # Fetches the details of a given organisation in slipstream
  # @param organisation_identifier The PMS-specific id that uniquely identifies an organisation (What you call the organisation in your software), which owns one or more practice sites
  # @param [Hash] opts the optional parameters
  # @option opts [PracticeManagementSoftware] :x_practice_management_software The intended practice management software for the request, used to disambiguate a pms specific identifier when you have access to multiple PMS systems.   **Omit this if you only have access to a single PMS.** 
  # @return [OrganisationDetails]
  describe 'get_organisation test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_organisation_api_account
  # Gets the api account for an organisation
  # Fetches the details of the api account for a given organisation. If the account does not yet exist, it will be created and the API key returned. This is the same account that is used to access the public API
  # @param organisation_identifier The PMS-specific id that uniquely identifies an organisation (What you call the organisation in your software), which owns one or more practice sites
  # @param [Hash] opts the optional parameters
  # @option opts [PracticeManagementSoftware] :x_practice_management_software The intended practice management software for the request, used to disambiguate a pms specific identifier when you have access to multiple PMS systems.   **Omit this if you only have access to a single PMS.** 
  # @return [ApiAccountDetails]
  describe 'get_organisation_api_account test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_organisation_identity
  # Get organisation identity
  # Fetches the identity of a given organisation in slipstream
  # @param organisation_identifier The PMS-specific id that uniquely identifies an organisation (What you call the organisation in your software), which owns one or more practice sites
  # @param [Hash] opts the optional parameters
  # @option opts [PracticeManagementSoftware] :x_practice_management_software The intended practice management software for the request, used to disambiguate a pms specific identifier when you have access to multiple PMS systems.   **Omit this if you only have access to a single PMS.** 
  # @return [OrganisationIdentity]
  describe 'get_organisation_identity test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for onboard_organisation
  # Upsert organisation
  # Creates or updates an organisation in the slipstream practice registry and returns a unique identifier
  # @param organisation_identifier The PMS-specific id that uniquely identifies an organisation (What you call the organisation in your software), which owns one or more practice sites
  # @param organisation_onboarding_request The details of the organisation to onboard
  # @param [Hash] opts the optional parameters
  # @option opts [PracticeManagementSoftware] :x_practice_management_software The intended practice management software for the request, used to disambiguate a pms specific identifier when you have access to multiple PMS systems.   **Omit this if you only have access to a single PMS.** 
  # @return [OrganisationIdentity]
  describe 'onboard_organisation test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for rotate_organisation_api_key
  # Rotates the api keys for the organisation
  # Issues a new primary api key and makes the current api key into a secondary key - The new primary key will be returned in the response.&lt;/br&gt; The old primary key will continue to work until it is rotated again (call this endpoint twice to invalidate all keys)
  # @param organisation_identifier The PMS-specific id that uniquely identifies an organisation (What you call the organisation in your software), which owns one or more practice sites
  # @param [Hash] opts the optional parameters
  # @option opts [PracticeManagementSoftware] :x_practice_management_software The intended practice management software for the request, used to disambiguate a pms specific identifier when you have access to multiple PMS systems.   **Omit this if you only have access to a single PMS.** 
  # @return [ApiAccountDetailsWithKey]
  describe 'rotate_organisation_api_key test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
