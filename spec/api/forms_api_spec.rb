=begin
#Practice -> Cloud API

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.0.0
Contact: Bifrost@HenryScheinOne.com
Generated by: https://openapi-generator.tech
Generator version: 7.15.0

=end

require 'spec_helper'
require 'json'

# Unit tests for SlipstreamClient::FormsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'FormsApi' do
  before do
    # run before each test
    @api_instance = SlipstreamClient::FormsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of FormsApi' do
    it 'should create an instance of FormsApi' do
      expect(@api_instance).to be_instance_of(SlipstreamClient::FormsApi)
    end
  end

  # unit tests for add_form_to_group
  # Add a form to a form group, or reset it if it already exists (allowing it to be refilled)
  # Add/Reset one form to an existing form group
  # @param site_slug The Slipstream [slug](https://sqids.org/) that uniquely identifies a physical practice
  # @param user_slug The Slipstream [slug](https://sqids.org/) that uniquely identifies a user
  # @param group_slug The Slipstream [slug](https://sqids.org/) that uniquely identifies a form group
  # @param create_forms_request 
  # @param [Hash] opts the optional parameters
  # @return [FormDetailsResponse]
  describe 'add_form_to_group test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_form_group
  # Create a form group for a user
  # Creates a form group with zero or more forms for a user to fill out
  # @param site_slug The Slipstream [slug](https://sqids.org/) that uniquely identifies a physical practice
  # @param user_slug The Slipstream [slug](https://sqids.org/) that uniquely identifies a user
  # @param create_form_group_request 
  # @param [Hash] opts the optional parameters
  # @return [FormGroupDetailsResponse]
  describe 'create_form_group test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_user_and_forms
  # Create a user with forms
  # Creates a user and a set of forms for them to fill out
  # @param site_slug The Slipstream [slug](https://sqids.org/) that uniquely identifies a physical practice
  # @param create_user_with_forms_request 
  # @param [Hash] opts the optional parameters
  # @return [UserWithFormsResponse]
  describe 'create_user_and_forms test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_form
  # Delete a form
  # Delete a form from the group
  # @param site_slug The Slipstream [slug](https://sqids.org/) that uniquely identifies a physical practice
  # @param user_slug The Slipstream [slug](https://sqids.org/) that uniquely identifies a user
  # @param group_slug The Slipstream [slug](https://sqids.org/) that uniquely identifies a form group
  # @param form_slug The Slipstream [slug](https://sqids.org/) that uniquely identifies a form
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_form test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_form_group
  # Delete a form group
  # Delete a form group and the associated forms
  # @param site_slug The Slipstream [slug](https://sqids.org/) that uniquely identifies a physical practice
  # @param user_slug The Slipstream [slug](https://sqids.org/) that uniquely identifies a user
  # @param group_slug The Slipstream [slug](https://sqids.org/) that uniquely identifies a form group
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_form_group test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_user_and_forms
  # Delete a form user record
  # Delete a form user record and all its associated form data
  # @param site_slug The Slipstream [slug](https://sqids.org/) that uniquely identifies a physical practice
  # @param user_slug The Slipstream [slug](https://sqids.org/) that uniquely identifies a user
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_user_and_forms test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_form_group
  # Get a form group
  # Get a form group and the associated forms
  # @param site_slug The Slipstream [slug](https://sqids.org/) that uniquely identifies a physical practice
  # @param user_slug The Slipstream [slug](https://sqids.org/) that uniquely identifies a user
  # @param group_slug The Slipstream [slug](https://sqids.org/) that uniquely identifies a form group
  # @param [Hash] opts the optional parameters
  # @return [FormGroupDetailsResponse]
  describe 'get_form_group test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_form_user
  # Get patient details
  # Gets the details of a patient
  # @param site_slug The Slipstream [slug](https://sqids.org/) that uniquely identifies a physical practice
  # @param user_slug The Slipstream [slug](https://sqids.org/) that uniquely identifies a user
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :include_form_groups If true, the response will include the form groups of the user
  # @return [FormUserDetailsResponse]
  describe 'get_form_user test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_group_form_details
  # Get form details
  # Gets the form details with the user&#39;s responses
  # @param site_slug The Slipstream [slug](https://sqids.org/) that uniquely identifies a physical practice
  # @param user_slug The Slipstream [slug](https://sqids.org/) that uniquely identifies a user
  # @param group_slug The Slipstream [slug](https://sqids.org/) that uniquely identifies a form group
  # @param form_slug The Slipstream [slug](https://sqids.org/) that uniquely identifies a form
  # @param [Hash] opts the optional parameters
  # @return [FormDetailsResponse]
  describe 'get_group_form_details test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_user_form_details
  # Get form details
  # Gets the form with the user&#39;s responses
  # @param site_slug The Slipstream [slug](https://sqids.org/) that uniquely identifies a physical practice
  # @param user_slug The Slipstream [slug](https://sqids.org/) that uniquely identifies a user
  # @param form_type_or_id The type of form to retrieve, or the form&#39;s unique identifier (TypeId) assigned by the client/PMS
  # @param [Hash] opts the optional parameters
  # @return [FormDetailsResponse]
  describe 'get_user_form_details test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_form_groups_for_user
  # List form groups for a user
  # Lists all form groups for a user
  # @param site_slug The Slipstream [slug](https://sqids.org/) that uniquely identifies a physical practice
  # @param user_slug The Slipstream [slug](https://sqids.org/) that uniquely identifies a user
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page_size The number of items to retrieve in this request
  # @option opts [String] :next_page_token A token retrieved from a previous request, used to retrieve the next page of results
  # @return [FormGroupDetailsListResponse]
  describe 'list_form_groups_for_user test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_form_users
  # List Form Users
  # List all form users for a site
  # @param site_slug The Slipstream [slug](https://sqids.org/) that uniquely identifies a physical practice
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page_size The number of items to retrieve in this request
  # @option opts [String] :next_page_token A token retrieved from a previous request, used to retrieve the next page of results
  # @option opts [Boolean] :include_form_groups If true, the response will include the form groups of the user
  # @return [FormUserDetailsListResponse]
  describe 'list_form_users test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_forms_in_group
  # List forms for a form group
  # Lists all forms for a form group
  # @param site_slug The Slipstream [slug](https://sqids.org/) that uniquely identifies a physical practice
  # @param user_slug The Slipstream [slug](https://sqids.org/) that uniquely identifies a user
  # @param group_slug The Slipstream [slug](https://sqids.org/) that uniquely identifies a form group
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :include_user_responses If true, the response will include the responses of the user
  # @return [FormDetailsListResponse]
  describe 'list_forms_in_group test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_form_user
  # Update a form user
  # Update a form user&#39;s patient details
  # @param site_slug The Slipstream [slug](https://sqids.org/) that uniquely identifies a physical practice
  # @param user_slug The Slipstream [slug](https://sqids.org/) that uniquely identifies a user
  # @param update_form_user_request 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'update_form_user test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
