=begin
#Practice -> Cloud API

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.0.0
Contact: Nexus@HenryScheinOne.co.nz
Generated by: https://openapi-generator.tech
Generator version: 7.7.0

=end

require 'spec_helper'
require 'json'

# Unit tests for SlipstreamClient::SitesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'SitesApi' do
  before do
    # run before each test
    @api_instance = SlipstreamClient::SitesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of SitesApi' do
    it 'should create an instance of SitesApi' do
      expect(@api_instance).to be_instance_of(SlipstreamClient::SitesApi)
    end
  end

  # unit tests for delete_site
  # Delete a practice site
  # Deletes a practice site from the slipstream practice registry. Will also delete the owning organisation if this is the last practice in the organisation.
  # @param site_identifier The PMS-specific id that uniquely identifies a physical practice site (What you call the site in your software)
  # @param [Hash] opts the optional parameters
  # @option opts [PracticeManagementSoftware] :x_practice_management_software The intended practice management software for the request, used to disambiguate a pms specific identifier when you have access to multiple PMS systems.   **Omit this if you only have access to a single PMS.** 
  # @return [PracticeSiteDeleted]
  describe 'delete_site test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_practice_site_identity_with_keys
  # Get practice identity
  # Fetches the identity of a given practice in slipstream and API Keys which can be used on the other endpoints
  # @param site_identifier The PMS-specific id that uniquely identifies a physical practice site (What you call the site in your software)
  # @param [Hash] opts the optional parameters
  # @option opts [PracticeManagementSoftware] :x_practice_management_software The intended practice management software for the request, used to disambiguate a pms specific identifier when you have access to multiple PMS systems.   **Omit this if you only have access to a single PMS.** 
  # @return [PracticeSiteIdentityWithKeys]
  describe 'get_practice_site_identity_with_keys test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_practice_sites
  # List Practice Sites
  # Lists practice sites in the slipstream practice registry
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page_size The page number to retrieve
  # @option opts [String] :next_page_token A token retrieved from a previous request, used to retrieve the next page of results
  # @option opts [Array<String>] :sites The slugs of the sites to return
  # @option opts [Array<String>] :owning_organisations The slugs of the owning organisation to return sites for
  # @option opts [Array<String>] :billing_organisations The slugs of the billing organisation to return sites for
  # @option opts [Array<String>] :countries The countries to return sites for
  # @option opts [Boolean] :is_active Filter active or inactive sites.
  # @option opts [PracticeManagementSoftware] :x_practice_management_software The intended practice management software for the request, used to disambiguate a pms specific identifier when you have access to multiple PMS systems.   **Omit this if you only have access to a single PMS.** 
  # @return [PracticeSiteListResponse]
  describe 'list_practice_sites test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for onboard_site
  # Upsert practice site
  # Creates a practice site in the slipstream practice registry and returns a unique identifier and API Keys which can be used on the site APIs
  # @param site_identifier The PMS-specific id that uniquely identifies a physical practice site (What you call the site in your software)
  # @param practice_site_onboarding_request The details of the practice to onboard
  # @param [Hash] opts the optional parameters
  # @option opts [PracticeManagementSoftware] :x_practice_management_software The intended practice management software for the request, used to disambiguate a pms specific identifier when you have access to multiple PMS systems.   **Omit this if you only have access to a single PMS.** 
  # @return [PracticeSiteIdentityWithKeys]
  describe 'onboard_site test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
