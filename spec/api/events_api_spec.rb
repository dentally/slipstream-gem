=begin
#Practice -> Cloud API

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.0.0
Contact: Bifrost@HenryScheinOne.com
Generated by: https://openapi-generator.tech
Generator version: 7.15.0

=end

require 'spec_helper'
require 'json'

# Unit tests for SlipstreamClient::EventsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'EventsApi' do
  before do
    # run before each test
    @api_instance = SlipstreamClient::EventsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of EventsApi' do
    it 'should create an instance of EventsApi' do
      expect(@api_instance).to be_instance_of(SlipstreamClient::EventsApi)
    end
  end

  # unit tests for events_options
  # Validate Webhook Subscription
  # Implements the [cloudevents validation](https://github.com/cloudevents/spec/blob/main/cloudevents/http-webhook.md#41-validation-request) specification so that standard cloudevent publishers can use it.
  # @param site_slug The unique slug for the practice site
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :web_hook_request_rate The rate at which the client can send requests to the server
  # @option opts [String] :web_hook_request_origin The origin that is allowed to send requests to the server
  # @return [nil]
  describe 'events_options test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for publish_events
  # Publish Events
  # Accepts CloudEvents or batches of CloudEvents related to the practice site. This can be used to send events to slipstream for processing, publishing as webhooks and analytics
  # @param site_slug The unique slug for the practice site
  # @param cloud_event 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'publish_events test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
